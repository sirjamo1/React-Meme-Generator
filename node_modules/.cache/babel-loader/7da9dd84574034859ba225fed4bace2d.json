{"ast":null,"code":"var _jsxFileName = \"/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/components/Meme.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport pictureFrame from \"../images/pictureFrame.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Meme() {\n  _s();\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://i.imgflip.com/emccr.jpg\"\n  }); // fetches data from website asigns the meme section to allMemeImages.\n  // To target only the BODY part of the response and to convert it from JSON to javascript, you use res. json().\n  //\n\n  const [allMemeImages, setAllMemeImages] = React.useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setAllMemeImages(data.data.memes));\n  }, [allMemeImages.id]); // this stops it looping when there is no difference \n  // goes through data allMemesImages and choses one at random (1-100) by id\n\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemeImages.length + 1);\n    setMeme(prevSetMeme => ({ ...prevSetMeme,\n      randomImage: allMemeImages[randomNumber].url\n    }));\n  } //get's name, value from the input and assigns new value to what has changed\n\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme(prevMeme => ({ ...prevMeme,\n      [name]: value\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meme--container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme--form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"meme--input\",\n        type: \"text\",\n        placeholder: \"Top Text\",\n        name: \"topText\",\n        value: meme.topText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"meme--input\",\n        type: \"text\",\n        placeholder: \"Bottom Text\",\n        name: \"bottomText\",\n        value: meme.bottomText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getMemeImage,\n        className: \"meme--button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: pictureFrame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"random-image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--top-text\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--bottom-text\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Meme, \"mMqW5U5oDRDluzwSg26VJIANxkc=\");\n\n_c = Meme;\n\nvar _c;\n\n$RefreshReg$(_c, \"Meme\");","map":{"version":3,"names":["React","pictureFrame","Meme","meme","setMeme","useState","topText","bottomText","randomImage","allMemeImages","setAllMemeImages","useEffect","fetch","then","res","json","data","memes","id","getMemeImage","randomNumber","Math","floor","random","length","prevSetMeme","url","handleChange","event","name","value","target","prevMeme"],"sources":["/home/sirjamo/repos/React-Bootcamp/React-Meme-Generator/src/components/Meme.js"],"sourcesContent":["import React from \"react\";\nimport pictureFrame from \"../images/pictureFrame.png\";\n\n\nexport default function Meme() {\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"https://i.imgflip.com/emccr.jpg\",\n  });\n\n// fetches data from website asigns the meme section to allMemeImages.\n// To target only the BODY part of the response and to convert it from JSON to javascript, you use res. json().\n//\n  const [allMemeImages, setAllMemeImages] = React.useState([]);\n  React.useEffect(()=> {\n  fetch(\"https://api.imgflip.com/get_memes\")\n      .then(res => res.json())\n      .then(data => setAllMemeImages(data.data.memes))\n      \n  },[allMemeImages.id]) // this stops it looping when there is no difference \n\n\n// goes through data allMemesImages and choses one at random (1-100) by id\n  function getMemeImage() {\n    const randomNumber = Math.floor(Math.random() * allMemeImages.length + 1);\n    setMeme((prevSetMeme) => ({\n      ...prevSetMeme,\n      randomImage: allMemeImages[randomNumber].url,\n    }));\n  }\n\n//get's name, value from the input and assigns new value to what has changed\nfunction handleChange(event) {\n  const {name, value} =event.target\n  setMeme(prevMeme => ({\n    ...prevMeme,\n    [name]: value\n  }))\n}\n  return (\n    <div className=\"meme--container\">\n      <div className=\"meme--form\">\n        <input\n          className=\"meme--input\"\n          type=\"text\"\n          placeholder=\"Top Text\"\n          name=\"topText\"\n          value={meme.topText}\n          onChange={handleChange}\n        />\n        <input\n          className=\"meme--input\"\n          type=\"text\"\n          placeholder=\"Bottom Text\"\n          name=\"bottomText\"\n          value={meme.bottomText}\n          onChange={handleChange}\n        />\n        <button onClick={getMemeImage} className=\"meme--button\">\n          <img src={pictureFrame} />\n        </button>\n      </div>\n      <div className=\"random-image-container\">\n        <img src={meme.randomImage} />\n        <h2 className=\"meme--top-text\">{meme.topText}</h2>\n        <h2 className=\"meme--bottom-text\">{meme.bottomText}</h2>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;AAGA,eAAe,SAASC,IAAT,GAAgB;EAAA;;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe;IACrCC,OAAO,EAAE,EAD4B;IAErCC,UAAU,EAAE,EAFyB;IAGrCC,WAAW,EAAE;EAHwB,CAAf,CAAxB,CAD6B,CAO/B;EACA;EACA;;EACE,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,KAAK,CAACK,QAAN,CAAe,EAAf,CAA1C;EACAL,KAAK,CAACW,SAAN,CAAgB,MAAK;IACrBC,KAAK,CAAC,mCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,gBAAgB,CAACM,IAAI,CAACA,IAAL,CAAUC,KAAX,CAFlC;EAIC,CALD,EAKE,CAACR,aAAa,CAACS,EAAf,CALF,EAX6B,CAgBP;EAGxB;;EACE,SAASC,YAAT,GAAwB;IACtB,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBd,aAAa,CAACe,MAA9B,GAAuC,CAAlD,CAArB;IACApB,OAAO,CAAEqB,WAAD,KAAkB,EACxB,GAAGA,WADqB;MAExBjB,WAAW,EAAEC,aAAa,CAACW,YAAD,CAAb,CAA4BM;IAFjB,CAAlB,CAAD,CAAP;EAID,CA1B4B,CA4B/B;;;EACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;IAC3B,MAAM;MAACC,IAAD;MAAOC;IAAP,IAAeF,KAAK,CAACG,MAA3B;IACA3B,OAAO,CAAC4B,QAAQ,KAAK,EACnB,GAAGA,QADgB;MAEnB,CAACH,IAAD,GAAQC;IAFW,CAAL,CAAT,CAAP;EAID;;EACC,oBACE;IAAK,SAAS,EAAC,iBAAf;IAAA,wBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACE;QACE,SAAS,EAAC,aADZ;QAEE,IAAI,EAAC,MAFP;QAGE,WAAW,EAAC,UAHd;QAIE,IAAI,EAAC,SAJP;QAKE,KAAK,EAAE3B,IAAI,CAACG,OALd;QAME,QAAQ,EAAEqB;MANZ;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QACE,SAAS,EAAC,aADZ;QAEE,IAAI,EAAC,MAFP;QAGE,WAAW,EAAC,aAHd;QAIE,IAAI,EAAC,YAJP;QAKE,KAAK,EAAExB,IAAI,CAACI,UALd;QAME,QAAQ,EAAEoB;MANZ;QAAA;QAAA;QAAA;MAAA,QATF,eAiBE;QAAQ,OAAO,EAAER,YAAjB;QAA+B,SAAS,EAAC,cAAzC;QAAA,uBACE;UAAK,GAAG,EAAElB;QAAV;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAjBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAsBE;MAAK,SAAS,EAAC,wBAAf;MAAA,wBACE;QAAK,GAAG,EAAEE,IAAI,CAACK;MAAf;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAI,SAAS,EAAC,gBAAd;QAAA,UAAgCL,IAAI,CAACG;MAArC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAI,SAAS,EAAC,mBAAd;QAAA,UAAmCH,IAAI,CAACI;MAAxC;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;GAlEuBL,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}